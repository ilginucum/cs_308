@using e_commerce.Models
@model OrderManagementViewModel

<div class="container-fluid mt-4 order-management">
    <h2 class="page-title">Order Management</h2>
    <div class="row">
        <!-- Processing Orders -->
        <div class="col-md-4">
            <div class="card custom-card">
                <div class="card-header order-header bg-processing">
                    <h3 class="mb-0">Processing Orders</h3>
                </div>
                <div class="card-body">
                    @foreach (var order in Model.ProcessingOrders)
                    {
                        <div class="card mb-3 custom-inner-card">
                            <div class="card-body">
                                <h5 class="card-title">Order #@order.Id</h5>
                                <p class="card-text">Order Date: @order.OrderDate.ToString("MM/dd/yyyy HH:mm")</p>
                                <p class="card-text">Total Amount: $@order.TotalAmount</p>

                                <h6>Items:</h6>
                                <ul class="list-unstyled">
                                    @foreach (var item in order.Items)
                                    {
                                        <li>
                                            @item.ProductName x @item.Quantity
                                            ($@item.UnitPrice each)
                                        </li>
                                    }
                                </ul>

                                @if (Model.Addresses.ContainsKey(order.AddressId))
                                {
                                    var address = Model.Addresses[order.AddressId];
                                    <div class="mt-3">
                                        <h6>Shipping Details:</h6>
                                        <p class="mb-1">@address.FullName</p>
                                        <p class="mb-1">@address.StreetAddress</p>
                                        <p class="mb-1">@address.City, @address.State @address.ZipCode</p>
                                        <p class="mb-1">@address.PhoneNumber</p>
                                        <p class="mb-1">@address.Email</p>
                                    </div>
                                }

                                <form asp-action="UpdateOrderStatus" method="post" class="mt-3">
                                    <input type="hidden" name="orderId" value="@order.Id" />
                                    <input type="hidden" name="newStatus" value="InTransit" />
                                    <button type="submit" class="btn custom-btn-primary">Mark In Transit</button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- In Transit Orders -->
        <div class="col-md-4">
            <div class="card custom-card">
                <div class="card-header order-header bg-intransit">
                    <h3 class="mb-0">In Transit Orders</h3>
                </div>
                <div class="card-body">
                    @foreach (var order in Model.InTransitOrders)
                    {
                        <div class="card mb-3 custom-inner-card">
                            <div class="card-body">
                                <h5 class="card-title">Order #@order.Id</h5>
                                <p class="card-text">Order Date: @order.OrderDate.ToString("MM/dd/yyyy HH:mm")</p>
                                <p class="card-text">Total Amount: $@order.TotalAmount</p>

                                <h6>Items:</h6>
                                <ul class="list-unstyled">
                                    @foreach (var item in order.Items)
                                    {
                                        <li>
                                            @item.ProductName x @item.Quantity
                                            ($@item.UnitPrice each)
                                        </li>
                                    }
                                </ul>

                                @if (Model.Addresses.ContainsKey(order.AddressId))
                                {
                                    var address = Model.Addresses[order.AddressId];
                                    <div class="mt-3">
                                        <h6>Shipping Details:</h6>
                                        <p class="mb-1">@address.FullName</p>
                                        <p class="mb-1">@address.StreetAddress</p>
                                        <p class="mb-1">@address.City, @address.State @address.ZipCode</p>
                                        <p class="mb-1">@address.PhoneNumber</p>
                                        <p class="mb-1">@address.Email</p>
                                    </div>
                                }

                                <form asp-action="UpdateOrderStatus" method="post" class="mt-3">
                                    <input type="hidden" name="orderId" value="@order.Id" />
                                    <input type="hidden" name="newStatus" value="Delivered" />
                                    <button type="submit" class="btn custom-btn-success">Mark Delivered</button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Delivered Orders -->
        <div class="col-md-4">
            <div class="card custom-card">
                <div class="card-header order-header bg-delivered">
                    <h3 class="mb-0">Delivered Orders</h3>
                </div>
                <div class="card-body">
                    @foreach (var order in Model.DeliveredOrders)
                    {
                        <div class="card mb-3 custom-inner-card">
                            <div class="card-body">
                                <h5 class="card-title">Order #@order.Id</h5>
                                <p class="card-text">Order Date: @order.OrderDate.ToString("MM/dd/yyyy HH:mm")</p>
                                <p class="card-text">Total Amount: $@order.TotalAmount</p>

                                <h6>Items:</h6>
                                <ul class="list-unstyled">
                                    @foreach (var item in order.Items)
                                    {
                                        <li>
                                            @item.ProductName x @item.Quantity
                                            ($@item.UnitPrice each)
                                        </li>
                                    }
                                </ul>

                                @if (Model.Addresses.ContainsKey(order.AddressId))
                                {
                                    var address = Model.Addresses[order.AddressId];
                                    <div class="mt-3">
                                        <h6>Shipping Details:</h6>
                                        <p class="mb-1">@address.FullName</p>
                                        <p class="mb-1">@address.StreetAddress</p>
                                        <p class="mb-1">@address.City, @address.State @address.ZipCode</p>
                                        <p class="mb-1">@address.PhoneNumber</p>
                                        <p class="mb-1">@address.Email</p>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .order-management {
        font-family: Arial, sans-serif;
    }

    .page-title {
        text-align: center;
        margin-bottom: 20px;
        color: #010101;
    }

    .custom-card {
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .order-header {
        color: white;
        text-align: center;
        font-weight: bold;
    }

    .bg-processing {
        background-color: #be3144;
    }

    .bg-intransit {
        background-color: #be3144;
    }

    .bg-delivered {
        background-color: #be3144;
    }

    .custom-inner-card {
        border-radius: 10px;
        background-color: #f9f9f9;
    }

    .btn {
        border-radius: 25px;
        font-weight: bold;
    }

    .custom-btn-primary {
        background-color: #be3144;
        color: white;
    }

    .custom-btn-primary:hover {
        background-color: #952735;
    }

    .custom-btn-success {
        background-color: #be3144;
        color: white;
    }

    .custom-btn-success:hover {
        background-color: #952735;
    }
</style>
