@model e_commerce.Models.SalesViewModel

@{
    ViewData["Title"] = "Sales Management";
    Layout = "_Layout";

    var productsWithoutPrice = Model.Products?.Where(p => p.Price == 0.0M) ?? new List<e_commerce.Models.Product>();
    var productsWithPrice = Model.Products?.Where(p => p.Price > 0.0M) ?? new List<e_commerce.Models.Product>();
    bool showCalculateSection = Model.FilteredOrders != null;
}

<div class="product-management-container">
    @if (ViewBag.SuccessMessage != null)
    {
        <div class="alert alert-success text-center" style="background-color: #dc7986; color: white; border: none; border-radius: 10px;">
            @ViewBag.SuccessMessage
        </div>
    }
    <div class="dashboard-header">
        <h2>Sales Management</h2>
    </div>

    <div class="action-cards">
        <a asp-action="ProductsAwaitingPrice" class="action-card create">
            <i class="bi bi-hourglass-split"></i>
            <span>Products Awaiting Price</span>
        </a>
        <a asp-action="ProductsWithPrice" class="action-card invoices">
            <i class="bi bi-cash-coin"></i>
            <span>Products with Price Set</span>
        </a>
        <a asp-action="RefundRequests" class="action-card comments">
            <i class="bi bi-arrow-counterclockwise"></i>
            <span>Refund Requests</span>
        </a>
    </div>

    <!-- Calculate Profit Block -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card custom-card">
                <div class="card-header text-white" style="background-color: #952735;">
                    <h4 class="mb-0 text-center">
                        <button class="header-button" id="toggleCalculateSection">Calculate Profit / Display Invoice
                            </center></button>
                    </h4>
                </div>
                <div class="card-body" id="calculateSection" style="@(showCalculateSection ? "block" : "none")">
                    <form asp-action="ViewInvoices" method="get"></form>
                    <form asp-action="CalculateProfit" method="post" class="mb-4">
                        <div class="row">
                            <div class="col-md-4">
                                <label for="startDate" class="form-label">Start Date:</label>
                                <input type="date" id="startDate" name="startDate" class="form-control" required />
                            </div>
                            <div class="col-md-4">
                                <label for="endDate" class="form-label">End Date:</label>
                                <input type="date" id="endDate" name="endDate" class="form-control" required />
                            </div>
                            <div class="col-md-4 d-flex align-items-end">
                                <button type="submit" class="btn custom-btn-primary w-100">Calculate</button>
                            </div>
                        </div>
                    </form>

                    @if (Model.FilteredOrders != null)
                    {
                        <div class="text-center mt-3">
                            <h4>Total Revenue: @Model.TotalRevenue.ToString("C")</h4>
                            <h4>Profit/Loss: @Model.ProfitLoss.ToString("C")</h4>
                        </div>
                        <div class="text-center mt-3">
                            <button class="btn btn-secondary" id="toggleDetails">Details</button>
                            <button class="btn btn-primary" id="toggleChart">Chart</button>
                        </div>

                        <div id="detailsSection" style="display: none;">
                            <h5 class="text-center mt-3">Filtered Orders</h5>
                            <div class="table-responsive">
                                <table class="table custom-table">
                                    <thead>
                                        <tr>
                                            <th>Order ID</th>
                                            <th>User ID</th>
                                            <th>Total Amount</th>
                                            <th>Order Date</th>
                                            <th>Display Invoices</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var order in Model.FilteredOrders)
                                        {
                                            <tr>
                                                <td>@order.Id</td>
                                                <td>@order.UserId</td>
                                                <td>@order.TotalAmount.ToString("C")</td>
                                                <td>@order.OrderDate.ToShortDateString()</td>
                                                <td>
                                                    <a href="@Url.Action("GenerateInvoicePDF", "Sales", new { id = order.Id })"
                                                        class="btn btn-primary btn-sm">
                                                        Download PDF
                                                    </a>
                                                    <button class="btn btn-secondary btn-sm"
                                                        onclick="printInvoice('@Url.Action("GenerateInvoicePDF", "Sales", new { id = order.Id, download = false })')">
                                                        Print
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div id="chartSection" style="display: none; margin-top: 20px;">
                            <canvas id="profitLossChart" width="400" height="200"></canvas>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <script>
        function printInvoice(url) {
            const printWindow = window.open(url, '_blank');
            printWindow.onload = function () {
                printWindow.print();
            };
        }
    </script>

    <style>
        .page-title {
            color: #010101;
            font-weight: bold;
        }

        .product-management-container {
            padding: 20px;
            background-color: #f8f9fa;
        }

        .dashboard-header {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            margin-bottom: 20px;
        }

        .dashboard-header h2 {
            color: #2c3e50;
            margin: 0;
            font-size: 24px;
            font-weight: 600;
        }

        .action-cards {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin-bottom: 25px;
        }

        .action-card {
            background: white;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            text-decoration: none;
            color: #2c3e50;
            transition: transform 0.2s, box-shadow 0.2s;
            border: 1px solid #e9ecef;
        }

        .action-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            text-decoration: none;
        }

        .action-card i {
            font-size: 24px;
            margin-bottom: 10px;
            display: block;
        }

        .create {
            background-color: #be3144;
            color: white;
        }

        .invoices {
            background-color: #2ecc71;
            color: white;
        }

        .comments {
            background-color: #3498db;
            color: white;
        }

        .custom-card {
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 100%;
        }

        #toggleCalculateSection {
            background-color: #952735;
            color: white;
            border: none;
            font-size: 20px;
            padding: 10px;
            cursor: pointer;
        }
    </style>
    @section Scripts {
                    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                    <script>
                        document.getElementById("toggleCalculateSection").addEventListener("click", function () {
                            let section = document.getElementById("calculateSection");
                            section.style.display = (section.style.display === "none" || section.style.display === "") ? "block" : "none";
                            section.scrollIntoView({ behavior: 'smooth' });
                        });

                        document.getElementById("toggleDetails")?.addEventListener("click", function () {
                            let detailsSection = document.getElementById("detailsSection");
                            detailsSection.style.display = (detailsSection.style.display === "none" || detailsSection.style.display === "") ? "block" : "none";
                        });

                        document.getElementById("toggleChart")?.addEventListener("click", function () {
                            let chartSection = document.getElementById("chartSection");
                            chartSection.style.display = (chartSection.style.display === "none" || chartSection.style.display === "") ? "block" : "none";

                            if (chartSection.style.display === "block" && !window.chartInitialized) {
                                window.chartInitialized = true;

                                var totalRevenue = @Model.TotalRevenue;
                                var totalCost = @((Model.FilteredOrders != null) ? Model.FilteredOrders.Sum(o => o.Items.Sum(i => i.Quantity * i.UnitPrice * 0.7M)) : 0);
                                var profitLoss = @((Model.ProfitLoss != null) ? Model.ProfitLoss : 0);

                                var ctx = document.getElementById('profitLossChart').getContext('2d');
                                new Chart(ctx, {
                                    type: 'bar',
                                    data: {
                                        labels: ['Revenue', 'Cost', 'Profit/Loss'],
                                        datasets: [{
                                            label: 'Amount ($)',
                                            data: [totalRevenue, totalCost, profitLoss],
                                            backgroundColor: ['#36a2eb', '#ff6384', '#4bc0c0'],
                                            borderColor: ['#36a2eb', '#ff6384', '#4bc0c0'],
                                            borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        scales: {
                                            y: {
                                                beginAtZero: true
                                            }
                                        }
                                    }
                                });
                            }
                        });
                    </script>
                }