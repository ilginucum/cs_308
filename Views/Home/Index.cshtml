@model IEnumerable<e_commerce.Models.Product>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="hero-content">
        <div class="logo-container">
            <img src="/images/bookery-logo-black.png" alt="Bookery - Discover Worlds Within Words" class="hero-logo">
        </div>
        <p class="hero-text">Discover your next favorite book</p>
        <div class="auth-buttons">
            @if (User.Identity.IsAuthenticated)
            {
                @if (User.IsInRole("ProductManager"))
                {
                    <a asp-controller="Product" asp-action="Index" class="btn btn-primary">Product Manager Page</a>
                }
                else if (User.IsInRole("SalesManager"))
                {
                    <a asp-controller="Sales" asp-action="Index" class="btn btn-primary">Sales Manager Page</a>
                }
                else if (User.IsInRole("Customer"))
                {
                    <a asp-controller="User" asp-action="Profile" class="btn btn-primary">Profile</a>
                }
                <form asp-controller="User" asp-action="Logout" method="post" class="d-inline">
                    <button type="submit" class="btn btn-outline">Logout</button>
                </form>
            }
            else
            {
                <a asp-controller="User" asp-action="Login" class="btn btn-primary">Login</a>
                <a asp-controller="User" asp-action="Registration" class="btn btn-outline">Register</a>
            }
        </div>
    </div>
</div>

<style>
    .text-center {
        background: linear-gradient(135deg, #be3144 0%, #952735 100%);
        padding: 0.3rem;
        margin-bottom: 0.5rem;
        border-radius: 0 0 20px 20px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        color: white;
    }

    .logo-container {
        margin: 0.2rem 0; 
    }

    .hero-logo {
        max-width: 400px;
        height: auto;
        margin: 0 auto;
        display: block;
    }

    .hero-content {
        max-width: 800px;
        margin: 0 auto;
        padding: 0; 
    }

    .hero-text {
        font-size: 1.2rem;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 0.5rem;
    }

    .auth-buttons {
        display: flex;
        gap: 0.5rem; 
        justify-content: center;
        margin: 0.2rem 0; 
    }
</style>

<div class="mt-4 search-section">
    <h2 class="section-title">Our Products</h2>
    
    <div class="search-filters">
        <!-- Search Box -->
        <div class="search-box mb-4">
            <label for="bookSearch" class="form-label">Search by Book Name or Author</label>
            <div class="input-group">
                <input type="text" id="bookSearch" class="form-control" placeholder="Type to search...">
                <button id="searchButton" class="btn btn-search">Search</button>
            </div>
        </div>

        <div class="filters-grid">
             <!-- Price Sort -->
            <div class="filter-item">
                <label for="priceSort" class="form-label">Sort by Price</label>
                <select id="priceSort" class="form-control">
                    <option value="">Select sorting</option>
                    <option value="asc">Lowest to Highest</option>
                    <option value="desc">Highest to Lowest</option>
                </select>
            </div>
        </div>

        <!-- Genre Filter -->
        <div class="genre-filter">
            <label class="form-label">Filter by Genres</label>
            <div class="genre-checkboxes">
                @foreach (var genre in ViewBag.Genres)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input genre-checkbox" type="checkbox" 
                               id="genre-@genre.Replace(" ", "-")" value="@genre">
                        <label class="form-check-label" for="genre-@genre.Replace(" ", "-")">
                            @genre
                        </label>
                    </div>
                }
            </div>
        </div>

        <button id="applyFilters" class="btn btn-primary apply-filters">
            Apply Filters
        </button>
    </div>
</div>

<style>
    .search-section {
        background-color: white;
        padding: 2rem;
        border-radius: 16px;
        box-shadow: 0 2px 20px rgba(0,0,0,0.06);
        margin-bottom: 3rem;
    }

    .section-title {
        font-size: 2.2rem;
        font-weight: 600;
        color: #2d3436;
        margin-bottom: 2rem;
        position: relative;
        padding-bottom: 1rem;
    }

    .section-title:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 60px;
        height: 4px;
        background: linear-gradient(135deg, #be3144 0%, #952735 100%);
        border-radius: 2px;
    }

    .search-filters {
        padding: 1rem;
    }

    .filters-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .genre-checkboxes {
        margin: 15px 0;
        max-height: 150px;
        overflow-y: auto;
        border: 1px solid #e0e0e0;
        padding: 15px;
        border-radius: 12px;
        background-color: white;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .form-check-inline {
        margin-right: 15px;
        margin-bottom: 8px;
        padding: 8px 16px;
        background-color: #f8f9fa;
        border-radius: 50px;
        transition: all 0.3s ease;
        cursor: pointer;
        border: 1px solid #e0e0e0;
    }

    .form-check-inline:hover {
        background-color: #be3144;
        color: white;
        border-color: #be3144;
    }
</style>

<div id="productList" class="row">
    @foreach (var product in Model)
    {
        <div class="col-md-4 mb-3 product-item" 
             data-name="@product.Name" 
             data-author="@product.Author" 
             data-price="@product.Price"
             data-genre="@product.Genre">
            <a href="@Url.Action("ProductDetails", "Product", new { id = product.Id })" class="text-decoration-none text-dark">
                <div class="card h-100">
                    @{
                        string imageUrl = product.Name switch
                        {
                            "SuÃ§ ve Ceza" => "/images/crime-and-punishment.jpg",
                            "Sefiller" => "/images/les-miserables.jpg",
                            "Anna Karenina" => "/images/anna-karenina.jpg",
                            "Romeo ve Juliet" => "/images/romeo-and-juliet.jpg",
                            "Brave New World" => "/images/brave-new-world.jpg",
                            _ => "/images/default-book.jpg"
                        };
                    }
                    <img src="@imageUrl" class="card-img-top" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <p class="card-text">Price: $@product.Price</p>
                        <p class="card-text">In Stock: @product.QuantityInStock</p>
                        <p class="card-text">Author: @product.Author</p>
                        @if (!string.IsNullOrEmpty(product.Genre))
                        {
                            <p class="card-text">Genre: @product.Genre</p>
                        }
                    </div>
                </div>
            </a>
        </div>
    }
</div>

<style>
    .card {
        border: none;
        border-radius: 12px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 15px rgba(0,0,0,0.05);
        overflow: hidden;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    }

    .card-body {
        padding: 2rem;
    }

    .card-title {
        color: #2d3436;
        font-size: 1.4rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .card-img-top {
        width: 100%;
        height: 250px;  
        object-fit: contain;  
        transition: transform 0.3s ease;
        padding: 1rem;  
        background-color: #fff;  
    }

    .card:hover .card-img-top {
        transform: scale(1.03);
    }
</style>

<style>
    /* Button Styles */
    .btn {
        padding: 0.8rem 2rem;
        border-radius: 50px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.9rem;
    }

    .btn-primary {
        background: linear-gradient(135deg, #be3144 0%, #952735 100%);
        border: none;
        box-shadow: 0 4px 15px rgba(190, 49, 68, 0.2);
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #952735 0%, #7a1f2d 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(190, 49, 68, 0.3);
    }

    .btn-outline {
        background-color: rgba(255, 255, 255, 0.1);
        border: 2px solid white;
        color: white;
    }

    .btn-outline:hover {
        background-color: white;
        color: #be3144;
    }

    /* Form Controls */
    .form-control {
        padding: 0.8rem 1.2rem;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        font-size: 1rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.02);
        transition: all 0.3s ease;
        background-color: #f8f9fa;
        border: 2px solid transparent;
    }

    .form-control:hover {
        background-color: white;
        border-color: #e0e0e0;
    }

    .form-control:focus {
        background-color: white;
        border-color: #be3144;
        box-shadow: 0 0 0 3px rgba(190, 49, 68, 0.1);
    }

    /* Custom Scrollbar */
    .genre-checkboxes::-webkit-scrollbar {
        width: 6px;
    }

    .genre-checkboxes::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    .genre-checkboxes::-webkit-scrollbar-thumb {
        background: #be3144;
        border-radius: 10px;
    }

    /* Search Button */
    #searchButton {
        background-color: #be3144;
        color: white;
        border: none;
        padding: 0.8rem 2rem;
        border-radius: 8px;
    }

    #searchButton:hover {
        background-color: #952735;
    }

    select.form-control {
        cursor: pointer;
        background-image: linear-gradient(45deg, transparent 50%, #be3144 50%),
                        linear-gradient(135deg, #be3144 50%, transparent 50%);
        background-position: calc(100% - 20px) calc(1em + 2px),
                            calc(100% - 15px) calc(1em + 2px);
        background-size: 5px 5px,
                        5px 5px;
        background-repeat: no-repeat;
        padding-right: 2.5rem;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // TÃ¼rkÃ§e karakterleri Ä°ngilizce karakterlere Ã§eviren normalize fonksiyonu
            function normalizeText(text) {
                return text.toLocaleLowerCase('tr-TR')  // TÃ¼rkÃ§e harf duyarlÄ±lÄ±ÄÄ±na gÃ¶re kÃ¼Ã§Ã¼k harfe Ã§evirme
                    .replace(/Ä±/g, 'i')
                    .replace(/Å/g, 's')
                    .replace(/Ã§/g, 'c')
                    .replace(/Ä/g, 'g')
                    .replace(/Ã¼/g, 'u')
                    .replace(/Ã¶/g, 'o')
                    .replace(/[^a-z0-9\s]/gi, '') // Harf, rakam ve boÅluk dÄ±ÅÄ±ndaki karakterleri temizle
                    .trim(); // BaÅ ve sondaki boÅluklarÄ± kaldÄ±r
            }
            function filterAndSortProducts() {
                var bookSearch = normalizeText($('#bookSearch').val()).toLowerCase(); // normalize edilmiÅ arama sorgusu
                var priceSort = $('#priceSort').val();
                var selectedGenres = $('.genre-checkbox:checked').map(function() {
                    return normalizeText($(this).val().toLowerCase());
                }).get();

                // Girdi kelimelerini parÃ§alayalÄ±m
                var searchTerms = bookSearch.split(/\s+/); // BoÅlukla ayrÄ±lmÄ±Å kelimeler listesi

                $('.product-item').each(function() {
                    var $item = $(this);
                    var name = normalizeText(($item.data('name') || '').toLowerCase());
                    var author = normalizeText(($item.data('author') || '').toLowerCase());
                    var genre = ($item.data('genre') || '').toLowerCase();
                    
                    var matchesGenres = selectedGenres.length === 0 || 
                        (genre && selectedGenres.includes(genre));
                    
                    // EÅleÅme koÅullarÄ±: her bir kelime kitap adÄ± ya da yazarda geÃ§iyor mu?
                    var matchesName = searchTerms.every(term => 
                    name.includes(term) || author.includes(term)
                    );
                    
                    var showProduct = matchesName && matchesGenres;
                    
                    $item.toggle(showProduct);
                });

                if (priceSort) {
                    var products = $('.product-item:visible').get();
                    products.sort(function(a, b) {
                        var priceA = parseFloat($(a).data('price'));
                        var priceB = parseFloat($(b).data('price'));
                        return priceSort === 'asc' ? priceA - priceB : priceB - priceA;
                    });
                    $('#productList').html(products);
                }
            }

            // Event handlers
            $('#applyFilters').on('click', filterAndSortProducts);
            $('#searchButton').on('click', filterAndSortProducts);
            $('.genre-checkbox').on('change', filterAndSortProducts);
            
            $('#bookSearch').on('keypress', function(e) {
                if (e.which === 13) {
                    filterAndSortProducts();
                }
            });
        });
    </script>
}